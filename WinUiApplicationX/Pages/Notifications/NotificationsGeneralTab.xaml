<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="WinUiApplicationX.Pages.Notifications.NotificationsGeneralTab"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WinUiApplicationX.Pages.Notifications"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid DataContext="{x:Bind ViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="560"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Spacing="12" HorizontalAlignment="Left">
            <TextBox Header="Title" Text="{Binding Title, Mode=TwoWay}" Width="400"/>
            <TextBox Header="Content" Text="{Binding Content, Mode=TwoWay}" Width="400"/>
            <StackPanel Orientation="Horizontal" Spacing="8">
                <TextBox Header="Notification image" Text="{Binding NotificationImagePath, Mode=TwoWay}" Width="349"/>
                <Button Command="{Binding BrowseImageCommand}" VerticalAlignment="Bottom">
                    <FontIcon Glyph="&#xED25;" />
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Spacing="8">
                <TextBox Header="Content image" Text="{Binding ContentImagePath, Mode=TwoWay}" Width="349"/>
                <Button Command="{Binding BrowseImageCommand}" VerticalAlignment="Bottom">
                    <FontIcon Glyph="&#xED25;" />
                </Button>
            </StackPanel>
        </StackPanel>
        <Border
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            BorderBrush="{ThemeResource SystemFillColorAttentionBrush}"
            BorderThickness="4"
            CornerRadius="4">
            <Image Source="ms-appx:///Assets/NotificationOverview.png" Stretch="None"/>
        </Border>
        <Canvas Grid.Column="1" Width="364" Height="470" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Rectangle
            x:Name="MyLine"
            Width="80"
            Height="35"
            Stroke="Orange"
            StrokeDashArray="2"
            StrokeThickness="2"
            Canvas.Left="70"
            Canvas.Top="195">
                <Rectangle.Triggers>
                    <EventTrigger>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="MyLine"
                                     Storyboard.TargetProperty="StrokeDashOffset"
                                     EnableDependentAnimation="True"
                                     RepeatBehavior="Forever"
                                     AutoReverse="False"
                                     To="-4"
                                     Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>
        </Canvas>
        <!--<StackPanel Spacing="12" HorizontalAlignment="Left">
            <TextBox Header="Input text:" Text="{Binding NotificationText, Mode=TwoWay}" Width="400"/>
            <StackPanel Orientation="Horizontal" Spacing="8">
                <TextBox Header="Image path:" Text="{Binding NotificationImagePath, Mode=TwoWay}" Width="349"/>
                <Button Command="{Binding BrowseImageCommand}" VerticalAlignment="Bottom">
                    <FontIcon Glyph="&#xED25;" />
                </Button>
            </StackPanel>
            <CheckBox Content="Schedule delay" IsChecked="{Binding IsDelayScheduleChecked, Mode=TwoWay}"/>
            <StackPanel Orientation="Horizontal" Spacing="8">
                <TimePicker Header="Select delivery time:" Time="{Binding SelectedScheduleTime, Mode=TwoWay}" ClockIdentifier="24HourClock" IsEnabled="{Binding IsDelayScheduleChecked}"/>
                <FontIcon
                    Visibility="{Binding CanSchedule, Converter={StaticResource NegateBoolToVisibilityConverter}}"
                    Glyph="&#xE783;"
                    VerticalAlignment="Bottom"
                    Margin="0,0,0,5"
                    Foreground="{ThemeResource SystemFillColorCriticalBrush}" 
                    ToolTipService.ToolTip="Cannot schedule in the past."/>
            </StackPanel>
            <Button IsEnabled="{Binding CanSchedule}" Content="Schedule" Command="{Binding ScheduleCommand}"/>
            <TextBlock Text="{Binding Result}"/>
        </StackPanel>-->
    </Grid>
</UserControl>
