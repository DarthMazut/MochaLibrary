<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="WinUiApplicationX.Pages.Notifications.NotificationsGeneralTab"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WinUiApplicationX.Pages.Notifications"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:WinUiApplicationX.Controls"
    xmlns:utils="using:MochaWinUI.Utils.Xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:notificationControls="using:WinUiApplicationX.Pages.Notifications.Controls"
    mc:Ignorable="d"
    x:Name="thisControl">

    <UserControl.Resources>
        <DataTemplate x:Key="SelectableItemTemplate">
            <Grid Height="55" Padding="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <TextBlock Text="{Binding Name}" />
                    <TextBlock Text="{Binding Key}" FontSize="10" />
                </StackPanel>
                <Button
                    Grid.Column="1"
                    Visibility="{Binding Parent.IsSelected, ElementName=ParentItem, Converter={StaticResource BoolToVisibilityConverter}}"
                    Command="{Binding Parent.ViewModel.RemoveItemCommand, ElementName=ParentControl}"
                    CommandParameter="{Binding}">
                    <utils:ParentService.Anchors>
                        <utils:ParentAnchorCollection>
                            <utils:ParentAnchor x:Name="ParentItem" ParentType="ListViewItem"/>
                            <utils:ParentAnchor x:Name="ParentControl" ParentName="thisControl" />
                        </utils:ParentAnchorCollection>
                    </utils:ParentService.Anchors>
                    <FontIcon Glyph="&#xE74D;" />
                </Button>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="InteractionItemTemplate">
            <Grid BorderThickness="0,0,0,1" BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}" Padding="8,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Value}" TextTrimming="CharacterEllipsis" />
            </Grid>
        </DataTemplate>
        <Style x:Key="InteractionItemStyle" TargetType="ListViewItem">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
    </UserControl.Resources>
    
    <Grid DataContext="{x:Bind ViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            BorderBrush="{ThemeResource SystemFillColorAttentionBrush}"
            BorderThickness="4"
            CornerRadius="4">
            <Image Source="ms-appx:///Assets/NotificationOverview.png" Stretch="None"/>
            <Canvas x:Name="InteractiveCanvas"/>
        </Grid>
        <ScrollViewer Grid.ColumnSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <StackPanel Spacing="12" HorizontalAlignment="Left">
                <!-- PARAMETERS -->
                <ContentControl IsEnabled="{Binding CanSchedule}">
                    <StackPanel Spacing="12" HorizontalAlignment="Left">
                        <TextBox x:Name="TitleTextBox" Header="Title" Text="{Binding Title, Mode=TwoWay}" Width="400"/>
                        <TextBox x:Name="ContentTextBox" Header="Content" Text="{Binding Content, Mode=TwoWay}" Width="400"/>
                        <controls:TextBoxEx
                            x:Name="NotificationImageTextBox"
                            Header="Notification image"
                            Text="{Binding NotificationImagePath, Mode=TwoWay}"
                            Command="{Binding BrowseNotificationImageCommand}"
                            Width="400"/>
                        <controls:TextBoxEx
                            x:Name="ContentImageTextBox"
                            Header="Content image"
                            Text="{Binding ContentImagePath, Mode=TwoWay}"
                            Command="{Binding BrowseContentImageCommand}"
                            Width="400"/>
                        <StackPanel Spacing="12">
                            <CheckBox x:Name="TextInputCheckBox" Content="Display text input" IsChecked="{Binding IsTextInputChecked, Mode=TwoWay}" />
                            <TextBox x:Name="TextInputHeader" Header="Text input header" IsEnabled="{Binding IsChecked, ElementName=TextInputCheckBox}" Text="{Binding TextInputHeader, Mode=TwoWay}" Width="400"/>
                            <TextBox x:Name="TextInputPlaceholder" Header="Text input placeholder" IsEnabled="{Binding IsChecked, ElementName=TextInputCheckBox}" Text="{Binding TextInputPlaceholder, Mode=TwoWay}" Width="400"/>
                        </StackPanel>
                        <StackPanel Spacing="12">
                            <CheckBox x:Name="SelectableItemCheckBox" Content="Display selectable item" IsChecked="{Binding IsSelectableItemChecked, Mode=TwoWay}" />
                            <TextBox x:Name="SelectableItemHeader" Header="Selectable item header" IsEnabled="{Binding IsChecked, ElementName=SelectableItemCheckBox}" Text="{Binding SelectableItemHeader, Mode=TwoWay}" Width="400"/>
                            <Grid>
                                <ListView
                                    x:Name="SelectableItemsList"
                                    ItemsSource="{Binding SelectableItems}"
                                    HorizontalAlignment="Left"
                                    Width="400"
                                    Height="180"
                                    BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}"
                                    BorderThickness="1"
                                    IsEnabled="{Binding IsChecked, ElementName=SelectableItemCheckBox}"
                                    ItemTemplate="{StaticResource SelectableItemTemplate}">
                                </ListView>
                                <Button
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Style="{ThemeResource AccentButtonStyle}"
                                    Margin="8"
                                    CornerRadius="18"
                                    Width="36"
                                    Height="36"
                                    Padding="2"
                                    Visibility="{Binding IsChecked, ElementName=SelectableItemCheckBox, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding Parent.ViewModel.AddItemCommand, ElementName=ParentControl}">
                                    <utils:ParentService.Anchor>
                                        <utils:ParentAnchor x:Name="ParentControl" ParentName="thisControl" />
                                    </utils:ParentService.Anchor>
                                    <FontIcon Glyph="&#xE710;" />
                                </Button>
                            </Grid>
                            <StackPanel>
                                <CheckBox x:Name="LeftButtonCheckBox" Content="Left button" IsChecked="{Binding IsLeftButtonChecked, Mode=TwoWay}"/>
                                <TextBox x:Name="LeftButtonTextBox" Width="400" Text="{Binding LeftButtonText, Mode=TwoWay}" PlaceholderText="Left button name" IsEnabled="{Binding IsChecked, ElementName=LeftButtonCheckBox}"/>
                            </StackPanel>
                            <StackPanel>
                                <CheckBox x:Name="MiddleButtonCheckBox" Content="Middle button" IsChecked="{Binding IsMiddleButtonChecked, Mode=TwoWay}"/>
                                <TextBox x:Name="MiddleButtonTextBox" Width="400" Text="{Binding MiddleButtonText, Mode=TwoWay}" PlaceholderText="Middle button name" IsEnabled="{Binding IsChecked, ElementName=MiddleButtonCheckBox}"/>
                            </StackPanel>
                            <StackPanel>
                                <CheckBox x:Name="RightButtonCheckBox" Content="Right button" IsChecked="{Binding IsRightButtonChecked, Mode=TwoWay}"/>
                                <TextBox x:Name="RightButtonTextBox" Width="400" Text="{Binding RightButtonText, Mode=TwoWay}" PlaceholderText="Right button name" IsEnabled="{Binding IsChecked, ElementName=RightButtonCheckBox}"/>
                            </StackPanel>
                            <StackPanel>
                                <CheckBox x:Name="DelayCheckBox" Content="Delay" IsChecked="{Binding IsDelayChecked, Mode=TwoWay}"/>
                                <Slider x:Name="DelaySlider" Minimum="3" Maximum="30" Value="{Binding DelayValue, Mode=TwoWay}" IsEnabled="{Binding IsChecked, ElementName=DelayCheckBox}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </ContentControl>
                <!-- SEND & RESPONSE -->
                <StackPanel Spacing="12" HorizontalAlignment="Left">
                    <notificationControls:ScheduleButton
                        Command="{Binding ScheduleOrAbortCommand}"
                        ProgressValue="{Binding DelayProgress}"
                        IsScheduable="{Binding CanSchedule}"
                        HorizontalAlignment="Right"
                        Width="142" Height="45"/>
                    <TextBlock FontSize="18" FontWeight="Bold" Text="Interaction data"/>
                    <ListView
                        ItemContainerStyle="{StaticResource InteractionItemStyle}"
                        ItemsSource="{Binding InteractionData}"
                        SelectionMode="None"
                        HorizontalAlignment="Left"
                        Width="400"
                        BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}"
                        BorderThickness="1,1,1,0"
                        ItemTemplate="{StaticResource InteractionItemTemplate}"/>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
